# -- Oh My Zsh
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME=""
CASE_SENSITIVE="true"

#chaCon
bindkey -s "^o" 'source ~/.local/scripts/tmux-sessionizer\n'
plugins=(git zsh-autosuggestions zsh-syntax-highlighting fzf poetry)
source $ZSH/oh-my-zsh.sh
set -o vi
export LANG=en_GB.UTF-8
export PAGER="less"
export EDITOR="nvim"
if [[ $(uname) == "Darwin" ]]; then
  BAT="bat"
elif [[ $(uname) == "Linux" ]]; then
  BAT="batcat"
  alias bat="batcat"
fi


# -------- ALIAS
alias rm="rm -iv"
#help
alias manual="tldr"
alias bathelp="$BAT --plain --language=help"
help() {
    "$@" --help 2>&1 | bathelp
}
alias -g -- --help="--help 2>&1 | bathelp"
# fzf
alias fzf="fzf --preview '$BAT --color=always --style=numbers --line-range=:500 {}'"
#lsd
alias ls="lsd"
alias l='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lt='ls --tree'


#PATHS
#nvim
export PATH="$PATH:$HOME/.local/nvim/bin"
#mysql
export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"
#go
export PATH="$HOME/go/bin:$PATH"

# SCRIPTS
source $HOME/.local/scripts/python.sh

# TOOLS
#ghostty
if [[ -n $GHOSTTY_RESOURCES_DIR ]]; then
  source "$GHOSTTY_RESOURCES_DIR"/shell-integration/zsh/ghostty-integration
fi

#man
export MANPATH="/usr/local/man:$MANPATH"
export MANPAGER="sh -c 'col -bx | $BAT -l man -p'"
export MANROFFOPT="-c"

#fzf
# Set up fzf key bindings and fuzzy completion
eval "$(fzf --zsh)"
# -- Use fd instead of find --
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}
# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}
bindkey -r "^G"

# fzf git (ctrl+g+...)
source ~/.fzf-git.sh/fzf-git.sh
# Redefine this function to change the options
_fzf_git_fzf() {
  fzf --height=50% --tmux 90%,70% \
    --layout=reverse --multi --min-height=20 --border \
    --border-label-pos=2 \
    --color='bg:#000000,bg+:#0e0e0e,fg:#f2f4f8,header:#3DDBD9:italic:underline,info:#25be6a,query:#f2f4f8' \
    --preview-window='right,50%,border-left' \
    --bind='ctrl-/:change-preview-window(down,50%,border-top|hidden|)' "$@"
}
export FZF_CTRL_T_OPTS="--preview '$BAT -n --color=always --line-range :500 {}'"
_fzf_comprun() {
  local command=$1
  shift
  case "$command" in
    cd)           fzf --preview 'lsd --tree {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo $'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$BAT -n --color=always --line-range :500 {}" "$@" ;;
  esac
}

#zoxide
eval "$(zoxide init zsh --cmd cd)"

#yazi(y)
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command $BAT -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

#starship
eval "$(starship init zsh)"
# Generated for envman. Do not edit. Esto se instalo con github, es para 
# instalar programs desde scripts
[ -s "$HOME/.config/envman/load.sh" ] && source "$HOME/.config/envman/load.sh"

#docker
# The following lines have been added by Docker Desktop to enable Docker CLI completions.
fpath=(/Users/octaviomontt/.docker/completions $fpath)
autoload -Uz compinit
compinit
# End of Docker CLI completions
