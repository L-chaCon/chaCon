#!/usr/bin/env bash

# Help funtionality
if [[ $1 == "-h" || $1 == "--help" ]]; then
  cat <<EOF
Sessionizer for tmux

This script lets you select or open a tmux session based on a folder.

  - Run it without arguments to use fzf to pick a folder.

./tmux-sessionizer

  - Pass a folder path as an argument to open it directly.

./tmux-sessionizer ~/workspace/myproject

  -Use -h | -help to see this help.

./tmux-sessionizer -h
EOF
  exit 0
fi

# Set search paths
DEFAULT_FOLDERS="$HOME/workspace:$HOME/.config:$HOME/github.com/chaCon"
if [[ -n $FZF_SEARCH_FOLDERS ]]; then
  FOLDERS="$DEFAULT_FOLDERS:$FZF_SEARCH_FOLDERS"
else
  FOLDERS="$DEFAULT_FOLDERS"
fi
search_paths=$(echo "$FOLDERS" | tr ":" " ")

# Get the folder path, can be pass as first parameter or
if [[ $# -eq 1 ]]; then
  selected=$1
else
  selected=$(fd -H --max-depth=1 --type d . $search_paths 2>/dev/null | fzf)
fi

# Exit if no folder selected
if [[ -z $selected ]]; then
  echo "No folder selected. Exiting."
  exit 0
fi

# TODO: MEJORAR DE AQUI PARA ABAJO
selected_name=$(basename "$selected" | tr . _)
if ! tmux has-session -t="$selected_name" 2>/dev/null; then
  tmux new-session -ds "$selected_name" -c "$selected"
  tmux neww -d -t "$selected_name:1" -c "$selected" "zsh -c 'nvim; exec zsh'"
  tmux neww -d -t "$selected_name:2" -c "$selected" "zsh"
fi

# If inside tmux, switch client to session + window
if [ -n "$TMUX" ]; then
  tmux switch-client -t "$selected_name":2
else
  tmux attach-session -t "$selected_name" \; select-window -t "$selected_name":2
fi
